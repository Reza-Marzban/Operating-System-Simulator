SWAP	PUSH,	HOLD	RESTORE ORIGINAL VALUE
		BR,		FIRST	SHIFT LEFT 4 BITS
LOOP	ADD,	ONE
		POP,	INDEX
FIRST	SL
		PUSH,	INDEX
		CPL,	FOUR
		BRT,	LOOP
		POP,	INDEX
		POP,	TEMP
		RTN				RETURN
		
START	RD				GET VALUE
		POP,	HOLD	SAVE IT
		PUSH,	HOLD	RESTORE IT
		CPG,	ZERO	IF LESS THAN ZERO
		BRF,	M2		USE METHOD 2
M1		AND,	RIGHT	LEAVE RIGHTMOST DIGIT
		PUSH,	TABLE	GET A VALUE FROM TABLE
		POP,	ANS		SAVE THE CHANGE
		CALL,	SWAP	CHANGE SECOND DIGIT
		PUSH,	TEMP	RESTORE CHANGE VALUE
		AND,	MID		LEAVE MIDDLE DIGIT UNMASKED
		ADD,	ANS		ADD IT TO THE ANSWER
		POP,	ANS		SAVE IT
		PUSH,	HOLD	RESTORE ORIGINAL VALUE
		AND,	LEFT	LEAVE LEFT DIGIT UNMASKED
		NOT				COMPLEMENT
		AND,	LEFT	MASK OUT AGAIN
		ADD,	ANS		INCLUDE IN ANSWER
		POP,	ANS		SAVE IT
		PUSH,	HOLD	RESTORE ORIGINAL VALUE
		AND,	RESTORE	LEAVE 2 LEFTMOST DIGIT
		NOT				COMPLEMENT
		AND,	RESTORE	MASK OUT AGAIN
		ADD, 	ANS		INCLUDE IN ANSWER
		BR,		WRITE
M2		CALL,	SWAP
		PUSH,	TEMP
WRITE	PUSH,	HOLD
		WR				ORIGINAL VALUE
		WR				ENCRYPTED VALUE
		HLT
ZERO	0000
ONE		0001
FOUR	0004
ANS		0000
HOLD	0000
INDEX	0001
TEMP	0000
RIGHT	000F
MID		00F0
LEFT	0F00
REST	3000
TABLE	000A
		0003
		0006
		0008
		000B
		0002
		000D
		000F
		0001
		0004
		0005
		000E
		000C
		0007
		0009
		0000